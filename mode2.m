close all
clear all
clc
r = 98;
notes= [r,r*(2^(1/12)), r*(2^(2/12)), r*(2^(3/12)),r*(2^(4/12)),r*(2^(5/12)),r*(2^(6/12)),r*(2^(7/12)),r*(2^(8/12)),r*(2^(9/12)),r*(2^(10/12)),r*(2^(11/12))];
num_of_notes = 12;
max_num_of_notes_in_raga = 7;

%database
ragam = [r (r*(2^(1/12))) (r*(2^(2/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(9/12)));
         r (r*(2^(1/12))) (r*(2^(2/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(10/12)));
         r (r*(2^(1/12))) (r*(2^(2/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(11/12)));
         r (r*(2^(1/12))) (r*(2^(2/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(10/12)));
         r (r*(2^(1/12))) (r*(2^(2/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(11/12)));
         r (r*(2^(1/12))) (r*(2^(2/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(10/12))) (r*(2^(11/12)));
          r (r*(2^(1/12))) (r*(2^(3/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(9/12)));
          r (r*(2^(1/12))) (r*(2^(3/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(10/12)));
          r (r*(2^(1/12))) (r*(2^(3/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(11/12)));%9
          r (r*(2^(1/12))) (r*(2^(3/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(10/12)));%10
          r (r*(2^(1/12))) (r*(2^(3/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(11/12)));%11
          r (r*(2^(1/12))) (r*(2^(3/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(10/12))) (r*(2^(11/12)));%12
          r (r*(2^(1/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(9/12)));%13
          r (r*(2^(1/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(10/12)));%14
          r (r*(2^(1/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(11/12)));%15
          r (r*(2^(1/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(10/12)));%16
          r (r*(2^(1/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(11/12)));%17
          r (r*(2^(1/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(10/12))) (r*(2^(11/12)));%18
         r (r*(2^(2/12))) (r*(2^(3/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(9/12)));%19
          r (r*(2^(2/12))) (r*(2^(3/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(10/12)));%20
          r (r*(2^(2/12))) (r*(2^(3/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(11/12)));%21
         r (r*(2^(2/12))) (r*(2^(3/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(10/12)));%22
          r (r*(2^(2/12))) (r*(2^(3/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(11/12)));%23          
         r (r*(2^(2/12))) (r*(2^(3/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(10/12))) (r*(2^(11/12)));%24
         r (r*(2^(2/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(9/12)));%25
         r (r*(2^(2/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(10/12)));%26
         r (r*(2^(2/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(11/12)));%27
         r (r*(2^(2/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(10/12)));%28
         r (r*(2^(2/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(11/12)));
         r (r*(2^(2/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(10/12))) (r*(2^(11/12)));%30
         r (r*(2^(3/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(9/12)));%31
         r (r*(2^(3/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(10/12)));%32
         r (r*(2^(3/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(11/12)));%33
         r (r*(2^(3/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(10/12)));%34
         r (r*(2^(3/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(11/12)));%35
         r (r*(2^(3/12))) (r*(2^(4/12))) (r*(2^(5/12))) (r*(2^(7/12))) (r*(2^(10/12))) (r*(2^(11/12)));%36
          r (r*(2^(1/12))) (r*(2^(2/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(9/12)));
          r (r*(2^(1/12))) (r*(2^(2/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(10/12)));
          r (r*(2^(1/12))) (r*(2^(2/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(11/12)));
          r (r*(2^(1/12))) (r*(2^(2/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(10/12)));
          r (r*(2^(1/12))) (r*(2^(2/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(11/12)));
          r (r*(2^(1/12))) (r*(2^(2/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(10/12))) (r*(2^(11/12)));
          r (r*(2^(1/12))) (r*(2^(3/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(9/12)));
          r (r*(2^(1/12))) (r*(2^(3/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(10/12)));
          r (r*(2^(1/12))) (r*(2^(3/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(11/12)));%9
          r (r*(2^(1/12))) (r*(2^(3/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(10/12)));%10
          r (r*(2^(1/12))) (r*(2^(3/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(11/12)));%11
          r (r*(2^(1/12))) (r*(2^(3/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(10/12))) (r*(2^(11/12)));%12
          r (r*(2^(1/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(9/12)));%13
          r (r*(2^(1/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(10/12)));%14
          r (r*(2^(1/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(11/12)));%15
          r (r*(2^(1/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(10/12)));%16
          r (r*(2^(1/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(11/12)));%17
          r (r*(2^(1/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(10/12))) (r*(2^(11/12)));%18
          r (r*(2^(2/12))) (r*(2^(3/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(9/12)));%19
          r (r*(2^(2/12))) (r*(2^(3/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(10/12)));%20
          r (r*(2^(2/12))) (r*(2^(3/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(11/12)));%21
          r (r*(2^(2/12))) (r*(2^(3/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(10/12)));%22
          r (r*(2^(2/12))) (r*(2^(3/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(11/12)));%23
          r (r*(2^(2/12))) (r*(2^(3/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(10/12))) (r*(2^(11/12)));%24
          r (r*(2^(2/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(9/12)));%25
          r (r*(2^(2/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(10/12)));%26
          r (r*(2^(2/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(11/12)));%27
          r (r*(2^(2/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(10/12)));%28
          r (r*(2^(2/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(11/12)));%29
          r (r*(2^(2/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(10/12))) (r*(2^(11/12)));%30
          r (r*(2^(3/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(9/12)));%31
          r (r*(2^(3/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(10/12)));%32
          r (r*(2^(3/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(8/12))) (r*(2^(11/12)));%33
          r (r*(2^(3/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(10/12)));%34
          r (r*(2^(3/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(9/12))) (r*(2^(11/12)));%35
         r (r*(2^(3/12))) (r*(2^(4/12))) (r*(2^(6/12))) (r*(2^(7/12))) (r*(2^(10/12))) (r*(2^(11/12)))];
     
raga = 29;
selected_raga = ragam(raga,:);
fprintf('checking raga %d : \n',raga);
disp(ragam(raga,:));
recObj = audiorecorder;
disp('start recording:'); 
recordblocking(recObj,10);
disp('stop recording');
myRecording = getaudiodata(recObj);
audiowrite('savi.wav', myRecording, 8000, 'BitsPerSample',32);
[z,fs]=audioread('savi.wav');

%program to remove silence from the audio

%step 1- Break the signal into frames of 0.5s
current_time = 0;
frame_duration = 0.1;
frame_len = frame_duration*fs;
N = length(z);
num_frames = floor(N/frame_len);

count = 0;
tolerance = 5;

inp_notes_sung = [0 0 0 0 0 0 0];

for k = 1:num_frames
   %extract a frame of audio
   frame = z( (k-1)*frame_len+1 : frame_len*k);
   %Step 2-identify non-silent region as regions with amplitude > 0.01
   max_val = max(frame);

   if(max_val > 0.00001)
       %frame is not silent
   
       count=count+1;
       f0 = pitch(frame,fs);
   
       %mapping each f0 to quantized notes
       for j = 1 : num_of_notes
           if(abs(f0 - notes(j)) <= tolerance)
               f0 = notes(j);
               contains_freq = 0;
               for n = 1 : max_num_of_notes_in_raga
                   if(f0 == selected_raga(n))
                        contains_freq = 1;
                        inp_notes_sung(n) = selected_raga(n);
                        break;
                   end
               end

               %if freq is not present in selected raga
               if(contains_freq == 0)
                    fprintf('err freq : %f :  at time : %fs\n',f0,current_time);
               end
                break;
           end
       end
   end
   %updating time
   current_time = current_time + frame_duration;
   %end of frame 
end

disp('sung notes');
disp(inp_notes_sung);
for j = 1 : max_num_of_notes_in_raga
    if(inp_notes_sung(j) == 0)
        fprintf('you did not sing %f of raga %d \n',selected_raga(j),raga);
    end
end
    